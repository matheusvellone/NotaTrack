generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins", "prismaSchemaFolder"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "sqlite"
  url = "file:./dev.db"
  relationMode = "foreignKeys"
}

model Store {
  @@map("stores")

  id Int @id @default(autoincrement())
  name String
  cnpj String @unique

  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt

  storeProducts StoreProduct[]
}

model NotaFiscal {
  @@map("notas_fiscais")

  id Int @id @default(autoincrement())
  chaveAcesso String @map("chave_acesso")
  emittedAt DateTime @map("emitted_at")
  processedAt DateTime @map("processed_at")

  notaFiscalProducts NotaFiscalProducts[]

  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt
}

model NotaFiscalProducts {
  @@map("nota_fiscal_products")

  id Int @id @default(autoincrement())
  notaFiscalId Int @map("nota_fiscal_id")
  productId Int @map("product_id")
  quantity Int
  price Int

  notaFiscal NotaFiscal @relation(fields: [notaFiscalId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

enum ProductUnit {
  UN
  KG
  L
}

model Product {
  @@map("products")

  id Int @id @default(autoincrement())
  name String
  unit ProductUnit
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt

  storeProducts StoreProduct[]
  notaFiscalProducts NotaFiscalProducts[]
}

model StoreProduct {
  @@map("store_products")
  @@id([storeId, code])

  storeId Int @map("store_id")
  code String

  productId Int @map("product_id")

  store Store @relation(fields: [storeId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}
